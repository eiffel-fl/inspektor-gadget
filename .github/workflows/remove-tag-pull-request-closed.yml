name: Inspektor Gadget CI
on:
  delete:
  pull_request:
    types: [closed]

jobs:
  remove-tag-from-ci-registry:
    name: Remove tag for CI image
    runs-on: ubuntu-latest
    permissions:
      packages: delete
    steps:
    - name: Set IMAGE_TAG.
      run: |
        # We cannot use ./.github/actions/set-image-tag for this because we
        # need to check github.event_name since we use this code for branch
        # deleting as well as PR closing:
        if [ ${{ github.event_name }} == 'pull_request' ]; then
          tag=${{ github.head_ref }}
        elif [ ${{ github.event_name }} == 'delete' ]; then
          tag=${{ github.ref }}
        else
          echo "This should really not happen!"
          exit 1
        fi

        # Remove refs/*/.
        tag=${tag#refs/*/}
        # Replace / by - to avoid docker push crying.
        tag=${tag/\//-}

        echo IMAGE_TAG=${tag} >> $GITHUB_ENV
    - name: Remove tag for CI image
      run: |
        repo_owner=${{ github.repository_owner }}
        image=${{ format('{0}-ci', github.repository) }}
        # Remove owner/ from repository name to get "image" name.
        image=${image#$repo_owner/}
        tag=${{ env.IMAGE_TAG }}

        echo "image: ${image}"
        echo "tag: ${tag}"

        # Switch to python because it is easier to loop through JSON array than
        # in bash with jq.
        python3 <<EOF
        import requests
        from requests.auth import HTTPBasicAuth

        r = requests.get('https://api.github.com/users/${repo_owner})
        r.raise_for_status()

        type = r.json()['type']
        if type != 'Organization' and type != 'User':
          print(f'This should not happen, type is: {type}')
          exit(1)

        auth = HTTPBasicAuth('${{ github.actor }}', '${{ secrets.PAT_REPO }}')
        r = requests.get('https://api.github.com/users/${repo_owner}/packages/container/${image}/versions', auth = auth)
        r.raise_for_status()

        versions = r.json()
        for v in versions:
          tags = v['metadata']['container']['tags']

          if '${tag}' in tags:
            id = v['id']

            if type == 'Organization':
              url = f'https://api.github.com/org/${repo_owner}/packages/container/${image}/versions/{id}'
            else: # simple User
              url = f'https://api.github.com/users/${repo_owner}/packages/container/${image}/versions/{id}'

            r = requests.delete(url, auth = auth)
            r.raise_for_status()

        # If no image matched the given tag, it was either never pushed or
        # already deleted.
        # So, we do not consider this as an error.
        EOF
