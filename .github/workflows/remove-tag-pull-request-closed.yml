name: Inspektor Gadget CI
on:
  delete:
  pull_request:
    types: [closed]

jobs:
  remove-tag-from-ci-registry:
    name: Remove tag for CI image
    runs-on: ubuntu-latest
    steps:
    - name: Set IMAGE_TAG.
      run: |
        # We cannot use ./.github/actions/set-image-tag for this because we
        # need to check github.event_name since we use this code for branch
        # deleting as well as PR closing:
        if [ ${{ github.event_name }} == 'pull_request' ]; then
          tag=${{ github.head_ref }}
        elif [ ${{ github.event_name }} == 'delete' ]; then
          tag=${{ github.ref }}
        else
          echo "This should really not happen!"
          exit 1
        fi

        # Remove refs/*/.
        tag=${tag#refs/*/}
        # Replace / by - to avoid docker push crying.
        tag=${tag/\//-}

        echo IMAGE_TAG=${tag} >> $GITHUB_ENV
    - name: Remove tag for CI image
      run: |
        user=${{ github.repository_owner }}
        image=${{ format('{0}-ci', github.repository) }}
        # Remove owner/ from repository name to get "image" name.
        image=${image#$user/}
        tag=${{ env.IMAGE_TAG }}

        echo "image: ${image}"
        echo "tag: ${tag}"

        sudo apt install python3
        # Switch to python because it is easier to loop through JSON array than
        # in bash with jq.
        python3 <<EOF
        import requests
        from requests.auth import HTTPBasicAuth

        auth = HTTPBasicAuth('${{ github.actor }}', '${{ secrets.GITHUB_TOKEN }}')

        r = requests.get('https://api.github.com/users/${user}/packages/container/${image}/versions/', auth=auth)
        r.raise_for_status()
        versions = r.json()
        for v in versions:
          tags = v['metadata']['container]['tags']

          if '${tag}' in tags:
            id = v['id']
            r = requests.delete(f'https://api.github.com/users/${user}/packages/container/${image}/versions/{id}', auth=auth)
            r.raise_for_status()
        EOF
